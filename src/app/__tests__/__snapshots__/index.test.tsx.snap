// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> should render and match the snapshot 1`] = `
<GlobalProvider
  data={
    Object {
      "currency": "USD",
    }
  }
>
  <TxnHistoryProvider
    value={
      Object {
        "config": Object {
          "convert": [Function],
        },
      }
    }
  >
    <Context.Provider
      value={
        Object {
          "errorRetryCount": 0,
          "refreshInterval": 0,
          "revalidateOnFocus": false,
          "revalidateOnReconnect": false,
          "shouldRetryOnError": false,
        }
      }
    >
      <BrowserRouter>
        <CfxProvider
          theme={
            Object {
              "breakpoints": Object {
                "lg": Object {
                  "max": "1440px",
                  "min": "1280px",
                },
                "md": Object {
                  "max": "1280px",
                  "min": "1024px",
                },
                "sm": Object {
                  "max": "1024px",
                  "min": "600px",
                },
                "xl": Object {
                  "max": "10000px",
                  "min": "1440px",
                },
                "xs": Object {
                  "max": "600px",
                  "min": "0",
                },
              },
            }
          }
        >
          <UNDEFINED />
          <Helmet
            defaultTitle="ConfluxScan"
            defer={true}
            encodeSpecialCharacters={true}
            titleTemplate="%s - ConfluxScan"
          >
            <meta
              content="BlockChain Explorer for Conflux Network"
              name="description"
            />
          </Helmet>
          <UNDEFINED />
          <ForwardRef(app__Main)>
            <withRouter(_ScrollToTop)>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/packing/:txHash"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/notfound/:contractAddress"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/contract"
                />
                <Route
                  exact={true}
                  path="/contract/:contractAddress"
                  render={[Function]}
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/contracts"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/registered-contracts"
                />
                <Route
                  exact={true}
                  path="/token/:tokenAddress"
                  render={[Function]}
                />
                <Route
                  exact={true}
                  path={
                    Array [
                      "/blocks-and-transactions",
                      "/blockchain",
                      "/blockchain/blocks-and-transactions",
                    ]
                  }
                  render={[Function]}
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/blockchain/blocks"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/blockchain/transactions"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/blockchain/cfx-transfers"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/blockchain/accounts"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/tokens"
                />
                <Route
                  exact={true}
                  path="/tokens/:tokenType"
                  render={[Function]}
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/sponsor"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/contract-deployment"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/contract-verification"
                />
                <Route
                  exact={true}
                  path="/sponsor/:contractAddress"
                  render={[Function]}
                />
                <Route
                  component={[Function]}
                  path="/charts"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/chart/:indicator"
                />
                <Route
                  exact={true}
                  path="/statistics"
                  render={[Function]}
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/statistics/:statsType"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/transaction/:hash"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/block/:hash"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/epoch/:number"
                />
                <Route
                  path="/address/:address"
                  render={[Function]}
                />
                <Route
                  component={[Function]}
                  path="/search/:text"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path={
                    Array [
                      "/address-converter",
                      "/address-converter/:address",
                    ]
                  }
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/push-tx"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path={
                    Array [
                      "/block-countdown",
                      "/block-countdown/:block",
                    ]
                  }
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/swap"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/report"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path={
                    Array [
                      "/notices",
                      "/notice",
                      "/notice/:id",
                    ]
                  }
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path={
                    Array [
                      "/networkError",
                      "/networkError/:network",
                    ]
                  }
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/balance-checker"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path={
                    Array [
                      "/nft-checker",
                      "/nft-checker/:address",
                    ]
                  }
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/_benchmark"
                />
                <Route
                  component={[Function]}
                />
              </Switch>
            </withRouter(_ScrollToTop)>
          </ForwardRef(app__Main)>
          <Unknown />
          <GlobalNotify />
          <UNDEFINED />
          <CookieTip />
          <GlobalTip
            tipKey="addressWarning"
          />
        </CfxProvider>
      </BrowserRouter>
    </Context.Provider>
  </TxnHistoryProvider>
</GlobalProvider>
`;
